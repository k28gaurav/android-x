apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.androidx.androidx"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'io.reactivex:rxjava:1.0.13'
    compile 'io.reactivex:rxandroid:1.0.1'
    testCompile 'junit:junit:4.12'
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testCompile "org.mockito:mockito-core:1.+"
    testCompile 'org.assertj:assertj-core:1.+'
}

apply plugin: 'jacoco'

jacoco {
//  Latest version "0.7.5.201505241946" doesn't work
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/reports")
}

def coverageSourceDirs = [
        'src/main/java',
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled = true
        html.destination "${reportsDir}/jacocoHtml"
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: [
                    '**/R*.class',
                    '**/BuildConfig*',
                    '**/*$*.class',
                    '**/*$*.java'
            ]
    )
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("./build/jacoco/testDebug.exec")

    // TODO: Ignore Dagger/Butterknife generated classes
}

